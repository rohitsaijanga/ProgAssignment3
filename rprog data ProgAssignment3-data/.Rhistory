rank <- c(1:nrow(csub))
cbind(csub,rank)
ncol(csub)
csub <- subset(data[(data[,7]== "TX"),])
csub[,11] <- as.numeric(csub[,11])
csub <- csub[!is.na(csub[,11]),]
ncol(csub)
csub <- csub[order(csub[,11]),]
rank <- c(1:nrow(csub))
rbind(csub,rank)
ncol(csub)
csub <- subset(data[(data[,7]== "TX"),])
csub[,11] <- as.numeric(csub[,11])
csub <- csub[!is.na(csub[,11]),]
ncol(csub)
csub <- csub[order(csub[,11]),]
rank <- c(1:nrow(csub))
csub <- cbind(csub,rank)
ncol(csub)
csub[csub[,47]==12]
csub[csub[,47]==12,1]
csub[csub[,47]==12,2]
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- as.data.frame(data)
if(outcome == "heart attack")
{
colneeded <- 11
}
else if(outcome == "heart failure")
{
colneeded <- 17
}
else if(outcome == "pneumonia")
{
colneeded <- 23
}
else
{
stop("invalid outcome")
}
c <- unique(data$State)
## Check that state and outcome are valid
if ((sum(c == state)) != 1)
{
stop("invalid state")
}
#change TX
csub <- subset(data[(data[,7]== state),])
#change 11
csub[,colneeded] <- as.numeric(csub[,colneeded])
csub <- csub[!is.na(csub[,colneeded]),]
csub <- csub[order(csub[,2]),]
csub <- csub[order(csub[,colneeded]),]
rank <- c(1:nrow(csub))
csub <- cbind(csub,rank)
if(num == "best")
{
num <- 1
}else if(num == "worst")
{
num <- max(rank)
}
print(num)
csub[csub[,ncol(csub)]== num,2]
## Return hospital name in that state with lowest 30-day death rate
# result <- csub[csub[,colneeded] == min(csub[,colneeded],na.rm = TRUE),2]
# result <- result[order(result)]
# result[1]
## Check that state and outcome are valid
## Return hospital name in that state with the given rank
## 30-day death rate
}
rankhospital(state = "TX",outcome = "heart failure",num = 4 )
rankhospital(state = "MD",outcome = "heart attack",num = "worst" )
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- as.data.frame(data)
if(outcome == "heart attack")
{
colneeded <- 11
}
else if(outcome == "heart failure")
{
colneeded <- 17
}
else if(outcome == "pneumonia")
{
colneeded <- 23
}
else
{
stop("invalid outcome")
}
c <- unique(data$State)
## Check that state and outcome are valid
if ((sum(c == state)) != 1)
{
stop("invalid state")
}
#change TX
csub <- subset(data[(data[,7]== state),])
#change 11
csub[,colneeded] <- as.numeric(csub[,colneeded])
csub <- csub[!is.na(csub[,colneeded]),]
csub <- csub[order(csub[,2]),]
csub <- csub[order(csub[,colneeded]),]
rank <- c(1:nrow(csub))
csub <- cbind(csub,rank)
if(num == "best")
{
num <- 1
}else if(num == "worst")
{
num <- max(rank)
}else if( num > max(rank))
{
return(NA)
}
print(num)
csub[csub[,ncol(csub)]== num,2]
## Return hospital name in that state with lowest 30-day death rate
# result <- csub[csub[,colneeded] == min(csub[,colneeded],na.rm = TRUE),2]
# result <- result[order(result)]
# result[1]
## Check that state and outcome are valid
## Return hospital name in that state with the given rank
## 30-day death rate
}
rankhospital(state = "MD",outcome = "heart attack",num = 5000 )
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- as.data.frame(data)
if(outcome == "heart attack")
{
colneeded <- 11
}
else if(outcome == "heart failure")
{
colneeded <- 17
}
else if(outcome == "pneumonia")
{
colneeded <- 23
}
else
{
stop("invalid outcome")
}
c <- unique(data$State)
## Check that state and outcome are valid
if ((sum(c == state)) != 1)
{
stop("invalid state")
}
csub <- subset(data[(data[,7]== state),])
csub[,colneeded] <- as.numeric(csub[,colneeded])
csub <- csub[!is.na(csub[,colneeded]),]
csub <- csub[order(csub[,2]),]
csub <- csub[order(csub[,colneeded]),]
rank <- c(1:nrow(csub))
csub <- cbind(csub,rank)
if(num == "best")
{
num <- 1
}else if(num == "worst")
{
num <- max(rank)
}else if( num > max(rank))
{
return(NA)
}
csub[csub[,ncol(csub)]== num,2]
## Return hospital name in that state with the given rank
## 30-day death rate
}
rankhospital(state = "MD",outcome = "heart attack",num = 5000 )
c <- unique(data$State)
nrow(c)
seq(c)
rankall <- function(outcome, num = "best")
{
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- as.data.frame(data)
if(outcome == "heart attack")
{
colneeded <- 11
}
else if(outcome == "heart failure")
{
colneeded <- 17
}
else if(outcome == "pneumonia")
{
colneeded <- 23
}
else
{
stop("invalid outcome")
}
c <- unique(data$State)
## Check that state and outcome are valid
get_hospital <- function(state){
csub <- subset(data[(data[,7]== state),])
csub[,colneeded] <- as.numeric(csub[,colneeded])
csub <- csub[!is.na(csub[,colneeded]),]
csub <- csub[order(csub[,2]),]
csub <- csub[order(csub[,colneeded]),]
rank <- c(1:nrow(csub))
csub <- cbind(csub,rank)
if(num == "best")
{
num <- 1
}else if(num == "worst")
{
num <- max(rank)
}else if( num > max(rank))
{
return(NA)
csub[csub[,ncol(csub)]== num,2]
}## Return hospital name in that state with the given rank
## 30-day death rate
}
hospital <- lapply(c, get_hospital)
cbind(hospital = hospital, state = c)
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
rankall <- function(outcome, num = "best")
{
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- as.data.frame(data)
if(outcome == "heart attack")
{
colneeded <- 11
}
else if(outcome == "heart failure")
{
colneeded <- 17
}
else if(outcome == "pneumonia")
{
colneeded <- 23
}
else
{
stop("invalid outcome")
}
c <- unique(data$State)
## Check that state and outcome are valid
get_hospital <- function(state){
csub <- subset(data[(data[,7]== state),])
csub[,colneeded] <- as.numeric(csub[,colneeded])
csub <- csub[!is.na(csub[,colneeded]),]
csub <- csub[order(csub[,2]),]
csub <- csub[order(csub[,colneeded]),]
rank <- c(1:nrow(csub))
csub <- cbind(csub,rank)
if(num == "best")
{
num <- 1
}else if(num == "worst")
{
num <- max(rank)
}else if( num > max(rank))
{
return(NA)
}
d <- csub[csub[,ncol(csub)]== num,2]
return (d)
## Return hospital name in that state with the given rank
## 30-day death rate
}
hospital <- lapply(c, get_hospital)
cbind(hospital = hospital, state = c)
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best")
{
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- as.data.frame(data)
if(outcome == "heart attack")
{
colneeded <- 11
}
else if(outcome == "heart failure")
{
colneeded <- 17
}
else if(outcome == "pneumonia")
{
colneeded <- 23
}
else
{
stop("invalid outcome")
}
c <- unique(data$State)
c <- c[order(c)]
## Check that state and outcome are valid
get_hospital <- function(state){
csub <- subset(data[(data[,7]== state),])
csub[,colneeded] <- as.numeric(csub[,colneeded])
csub <- csub[!is.na(csub[,colneeded]),]
csub <- csub[order(csub[,2]),]
csub <- csub[order(csub[,colneeded]),]
rank <- c(1:nrow(csub))
csub <- cbind(csub,rank)
if(num == "best")
{
num <- 1
}else if(num == "worst")
{
num <- max(rank)
}else if( num > max(rank))
{
return(NA)
}
d <- csub[csub[,ncol(csub)]== num,2]
return (d)
## Return hospital name in that state with the given rank
## 30-day death rate
}
hospital <- lapply(c, get_hospital)
result <- cbind(hospital = hospital, state = c)
result <- as.data.frame(result)
result
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
rm(list = ls())
best <- function(state, outcome) {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- as.data.frame(data)
#c <- colnames(data)
#c[c(11,17,23)]
if(outcome == "heart attack")
{
colneeded <- 11
}
else if(outcome == "heart failure")
{
colneeded <- 17
}
else if(outcome == "pneumonia")
{
colneeded <- 23
}
else
{
stop("invalid outcome")
}
c <- unique(data$State)
## Check that state and outcome are valid
if ((sum(c == state)) != 1)
{
stop("invalid state")
}
csub <- subset(data[(data[,7]== state),])
csub[,colneeded] <- as.numeric(csub[,colneeded])
csub <- csub[!is.na(csub[,colneeded]),]
## Return hospital name in that state with lowest 30-day death rate
result <- csub[csub[,colneeded] == min(csub[,colneeded],na.rm = TRUE),2]
result <- result[order(result)]
result[1]
}
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- as.data.frame(data)
if(outcome == "heart attack")
{
colneeded <- 11
}
else if(outcome == "heart failure")
{
colneeded <- 17
}
else if(outcome == "pneumonia")
{
colneeded <- 23
}
else
{
stop("invalid outcome")
}
c <- unique(data$State)
## Check that state and outcome are valid
if ((sum(c == state)) != 1)
{
stop("invalid state")
}
csub <- subset(data[(data[,7]== state),])
csub[,colneeded] <- as.numeric(csub[,colneeded])
csub <- csub[!is.na(csub[,colneeded]),]
csub <- csub[order(csub[,2]),]
csub <- csub[order(csub[,colneeded]),]
rank <- c(1:nrow(csub))
csub <- cbind(csub,rank)
if(num == "best")
{
num <- 1
}else if(num == "worst")
{
num <- max(rank)
}else if( num > max(rank))
{
return(NA)
}
csub[csub[,ncol(csub)]== num,2]
## Return hospital name in that state with the given rank
## 30-day death rate
}
rankall <- function(outcome, num = "best")
{
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- as.data.frame(data)
if(outcome == "heart attack")
{
colneeded <- 11
}
else if(outcome == "heart failure")
{
colneeded <- 17
}
else if(outcome == "pneumonia")
{
colneeded <- 23
}
else
{
stop("invalid outcome")
}
c <- unique(data$State)
c <- c[order(c)]
## Check that state and outcome are valid
get_hospital <- function(state){
csub <- subset(data[(data[,7]== state),])
csub[,colneeded] <- as.numeric(csub[,colneeded])
csub <- csub[!is.na(csub[,colneeded]),]
csub <- csub[order(csub[,2]),]
csub <- csub[order(csub[,colneeded]),]
rank <- c(1:nrow(csub))
csub <- cbind(csub,rank)
if(num == "best")
{
num <- 1
}else if(num == "worst")
{
num <- max(rank)
}else if( num > max(rank))
{
return(NA)
}
d <- csub[csub[,ncol(csub)]== num,2]
return (d)
## Return hospital name in that state with the given rank
## 30-day death rate
}
## For each state, find the hospital of the given rank
hospital <- lapply(c, get_hospital)
result <- cbind(hospital = hospital, state = c)
result <- as.data.frame(result)
## Return a data frame with the hospital names and the
## (abbreviated) state name
result
}
# head(rankall("heart attack", 20), 10)
# tail(rankall("pneumonia", "worst"), 3)
# tail(rankall("heart failure"), 10)
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
class(x <- 4)
class( x <- c(4, "a", TRUE))
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
